# RUN: docker-compose up --build

version: '3.7'

services:
  server:
    container_name: server # name of the container
    build:
      context: ./
    restart: unless-stopped
    volumes:
      - ./:/usr/app # used for nodemon to work within the container
      - /usr/app/node_modules
    ports: # route a specific localhost port to the port used by the container to access the server via that port. (localhost port : container port)
      - "8080:8080"

    ### BEGIN mongodb OPTIONS, comment out if not used
    depends_on: # this container depends on the mongodb container, so the mongodb container will run first before this one
      - mongodb
    links: # get the HostPorts of the depending containers
      - mongodb # The hostport of the 'mongodb' container will be set in the 'mongodb' variable
    ### END mongodb OPTIONS, comment out if not used
    
    environment: # set additional env variables
      - DATABASE_URL=mongodb://mongodb/ # comment out of no database is used
    networks: # add this container to the network 'app'
      - app
    command: npm run dev # command used the run this container

  # additional containers

  # MongoDB container (comment out if not used)
  mongodb:
    restart: unless-stopped
    container_name: mongo-database
    image: mongo:latest
    ports: # make the container's database accassible, comment out to prevent access outside of docker
      - "27017:27017"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - mongo_data:/data/db
    networks: # add the database to the network 'app'
      - app

networks: # used to link containers together so the one can use the other
  app:

volumes:
  mongo_data:
